name: Staging

on:
  push:
    branches:
      - master
      - staging

  pull_request:
    branches:
      - master
      - staging
    types: [opened]

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Unit Tests
        run: yarn test

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/**/cobertura-coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: '60 80'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          path: code-coverage-results.md

  deploy_coverage:
    runs-on: ubuntu-latest
    environment: production
    if: github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Unit Tests
        run: |
          BRANCH_NAME=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          SUMMARY="$(yarn test | tail -3 | head -1)"
          TOKENS=($SUMMARY)
          echo "BRANCH=$(echo ${BRANCH_NAME})" >> $GITHUB_ENV
          echo "COVERAGE=$(echo ${TOKENS[2]})" >> $GITHUB_ENV

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/**/cobertura-coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: '60 80'

      - name: Create the Badge
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: dc97c81b0a2877c01f920096e6128928
          filename: found-lost-pet-backend__${{ env.BRANCH }}.json
          label: Test Coverage
          message: ${{ env.COVERAGE }}
          color: green
          namedLogo: jest

      - name: Deploy Coverage Report
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./coverage/lcov-report

  deploy_production:
    runs-on: ubuntu-latest
    environment: production
    needs: [deploy_coverage]
    if: github.event_name == 'push'

    steps:
      - run: |
          echo github.ref_name 
          echo "$GITHUB_CONTEXT"
